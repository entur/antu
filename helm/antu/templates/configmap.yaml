apiVersion: v1
data:
  application.properties: |+

    # Spring
    spring.main.sources=no.entur.antu
    spring.profiles.active=gcs-blobstore,stop-place-changelog
    server.port={{ .Values.service.http.internalPort }}
    spring.quartz.auto-startup=false

    # Camel
    camel.main.name=antu
    camel.dataformat.jackson.module-refs=jacksonJavaTimeModule
    camel.dataformat.jackson.include=NON_NULL
    camel.cluster.file.enabled=false
    camel.cluster.kubernetes.enabled=true
    camel.cluster.kubernetes.cluster-labels[app]=antu
    camel.cluster.kubernetes.config-map-name=antu-leaders
    camel.servlet.mapping.context-path=/services/*
    camel.main.stream-caching-enabled=false
    camel.main.stream-caching-spool-enabled=true
    # the Camel shutdown timeout must be shorter than the Kubernetes terminationGracePeriod
    antu.shutdown.timeout=175
    antu.camel.redelivery.max=0

    # Agreement registry
    antu.organisation.refresh.interval=trigger.repeatInterval=1800000&trigger.repeatCount=-1&stateful=true
    antu.agreement.registry.url={{ .Values.agreementRegistryUrl }}

    # Stop place dataset import
    # Refresh stop place cache at 01:00 and 14:00 every day
    antu.stop.refresh.interval={{ .Values.stopPlaceCacheRefreshCron }}

    # Stop place changelog
    org.rutebanken.helper.stopplace.changelog.enabled=true
    org.rutebanken.helper.stopplace.changelog.kafka.autostartup=false
    org.rutebanken.helper.stopplace.changelog.kafka.bootstrap-servers={{ .Values.kafka.brokers }}
    org.rutebanken.helper.stopplace.changelog.kafka.schema-registry-url={{ .Values.kafka.registry }}
    org.rutebanken.helper.stopplace.changelog.kafka.topic={{ .Values.kafka.changelogTopic }}
    org.rutebanken.helper.stopplace.changelog.kafka.security-protocol=SASL_SSL
    org.rutebanken.helper.stopplace.changelog.kafka.sasl-mechanism=SCRAM-SHA-512
    org.rutebanken.helper.stopplace.changelog.kafka.sasl-jaas-config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${KAFKAUSERNAME}" password="${KAFKAPASSWORD}";
    org.rutebanken.helper.stopplace.changelog.kafka.schema-registry-basic-auth-user-info=${KAFKAUSERNAME}:${KAFKAPASSWORD}
    org.rutebanken.helper.stopplace.changelog.repository.url={{ .Values.tiamatUrl }}
    org.rutebanken.helper.stopplace.changelog.repository.allVersions=false
    org.rutebanken.helper.stopplace.changelog.repository.topographicPlaceExportMode=NONE
    org.rutebanken.helper.stopplace.changelog.repository.tariffZoneExportMode=NONE
    org.rutebanken.helper.stopplace.changelog.repository.groupOfTariffZonesExportMode=NONE
    org.rutebanken.helper.stopplace.changelog.repository.fareZoneExportMode=NONE
    org.rutebanken.helper.stopplace.changelog.repository.groupOfStopPlacesExportMode=NONE



    # Validators
    antu.netex.validation.schema.skip=false

    # Kubernetes
    antu.kubernetes.namespace={{ .Values.kubernetes.namespace }}
    antu.kubernetes.maxpods={{ .Values.kubernetes.maxPods }}

    # PubSub
    antu.pubsub.project.id={{ .Values.gcp.pubsubProjectId }}
    spring.cloud.gcp.project-id=${antu.pubsub.project.id}
    camel.component.google-pubsub.synchronous-pull-retryable-codes=DEADLINE_EXCEEDED

    #OAuth2 Resource Server
    antu.oauth2.resourceserver.auth0.ror.claim.namespace=https://ror.entur.io/

    # OAuth2 Resource Server for Entur Partner tenant
    antu.oauth2.resourceserver.auth0.entur.partner.jwt.issuer-uri={{ .Values.auth0.partner.url }}
    antu.oauth2.resourceserver.auth0.entur.partner.jwt.audience={{ .Values.auth0.ror.audience }}

    # OAuth2 Resource Server for RoR tenant
    antu.oauth2.resourceserver.auth0.ror.jwt.issuer-uri={{ .Values.auth0.ror.url }}
    antu.oauth2.resourceserver.auth0.ror.jwt.audience={{ .Values.auth0.ror.audience }}

    #Oauth2 Entur Partner Client
    spring.security.oauth2.client.provider.orgregister.token-uri={{ .Values.auth0.client.tokenUri }}
    spring.security.oauth2.client.registration.orgregister.client-id={{ .Values.auth0.client.clientId }}
    spring.security.oauth2.client.registration.orgregister.authorization-grant-type=client_credentials
    orgregister.oauth2.client.audience={{ .Values.auth0.client.orgregister.audience }}

    # OAuth2 Entur Internal Client
    spring.security.oauth2.client.registration.internal.authorization-grant-type=client_credentials
    spring.security.oauth2.client.registration.internal.client-id={{ .Values.auth0.internal.clientId }}
    spring.security.oauth2.client.provider.internal.token-uri={{ .Values.auth0.internal.tokenUri }}
    ror.oauth2.client.audience={{ .Values.auth0.ror.audience }}


    # Authorization
    antu.security.authorization-service=token-based
    antu.security.role.assignment.extractor={{ .Values.roleAssignmentExtractor }}
    user.permission.rest.service.url={{ .Values.baba.service }}/services/organisations/users


    # Blobstore
    blobstore.gcs.project.id={{ .Values.gcp.blobstoreProjectId }}
    blobstore.gcs.marduk.container.name={{ .Values.gcp.marduk.bucketName }}
    blobstore.gcs.antu.exchange.container.name={{ .Values.gcp.antu.exchangeBucketName }}
    blobstore.gcs.antu.container.name={{ .Values.gcp.antu.bucketName }}
    antu.netex.stop.current.filename=tiamat/CurrentAndFuture_latest.zip

    # Redis
    spring.data.redis.host=${REDIS_HOST}
    spring.data.redis.port=${REDIS_PORT}
    antu.redis.server.trust.store.file=/deployments/truststore/redis-server-ca.jks

    # Actuator
    management.endpoints.access.default=none
    management.endpoint.info.enabled=true
    management.endpoint.health.enabled=true
    management.health.defaults.enabled=false
    management.endpoint.health.probes.enabled=true
    management.endpoint.health.group.readiness.include=readinessState
    management.endpoint.prometheus.enabled=true
    management.endpoints.web.exposure.include=health,prometheus,info
    management.endpoints.jmx.exposure.exclude=*


    # Logging
    logging.config=classpath:logback.xml
    logging.level.no.entur=INFO
    logging.level.no.entur.antu=INFO
    logging.level.org.apache=INFO
    logging.level.org.apache.camel.component.http.HttpComponent=WARN

    # Feature flags
    interchange-waiting-time-validation-enabled={{ .Values.interchangeWaitingTimeValidationEnabled }}
    interchange-alighting-and-boarding-validation-enabled={{ .Values.alightingAndBoardingValidationEnabled }}
    interchange-service-journey-references-exist-validator-enabled={{ .Values.interchangeServiceJourneyReferencesExistValidatorEnabled }}

    # Additional allowed codespaces for Antu validation
    {{- range $index, $allowedCodespace := .Values.antu.validation.additionalAllowedCodespaces }}
    antu.validation.additional-allowed-codespaces[{{ $index }}].xmlns={{ $allowedCodespace.xmlns }}
    antu.validation.additional-allowed-codespaces[{{ $index }}].xmlnsUrl={{ $allowedCodespace.xmlnsUrl }}
    {{- end }}
kind: ConfigMap
metadata:
  name: {{ template "antu.name" . }}-config
  namespace: {{ .Release.Namespace }}
  labels:
  {{- include "common.labels" . | indent 4 }}
